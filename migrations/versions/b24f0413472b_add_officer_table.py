"""Add Officer table

Revision ID: b24f0413472b
Revises: 8495075d54c8
Create Date: 2024-08-25 14:34:27.837786

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b24f0413472b'
down_revision = '8495075d54c8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('officer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('banking_officer', schema=None) as batch_op:
        batch_op.drop_index('email')

    op.drop_table('banking_officer')
    with op.batch_alter_table('application', schema=None) as batch_op:
        batch_op.drop_constraint('application_ibfk_2', type_='foreignkey')
        batch_op.drop_column('reviewed_by')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('application', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reviewed_by', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('application_ibfk_2', 'banking_officer', ['reviewed_by'], ['officer_id'])

    op.create_table('banking_officer',
    sa.Column('officer_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('password_hash', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('officer_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('banking_officer', schema=None) as batch_op:
        batch_op.create_index('email', ['email'], unique=True)

    op.drop_table('officer')
    # ### end Alembic commands ###
